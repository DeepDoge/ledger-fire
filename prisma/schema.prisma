// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Transaction {
    id        BigInt @id
    from      Bytes
    timestamp BigInt

    SupplierBill SupplierBill[]

    @@index([from])
}

model Indexing {
    id       BigInt @id @default(0)
    nextTxId BigInt @default(0)
}

model Warehouse {
    id Int @id @default(autoincrement())

    name         String
    address      String
    stocks       Stock[]
    SupplierBill SupplierBill[]
}

model Brand {
    id Int @id @default(autoincrement())

    name     String
    products Product[]
}

model Product {
    id Int @id @default(autoincrement())

    name    String
    barcode String?
    code    String  @unique @default(cuid())
    brand   Brand   @relation(fields: [brandId], references: [id])

    brandId Int

    stocks          Stock[]
    SupplierProduct SupplierProduct[]
}

model Stock {
    warehouse Warehouse @relation(fields: [warehouseId], references: [id])
    product   Product   @relation(fields: [productId], references: [id])
    quantity  BigInt

    warehouseId Int
    productId   Int

    @@id([warehouseId, productId])
}

model Account {
    id Int @id @default(autoincrement())

    tckn     String? @unique
    fullName String
    nickname String?
    address  String?
    email    String?
    phone    String?

    Supplier Supplier?
}

model Supplier {
    account   Account @relation(fields: [accountId], references: [id])
    accountId Int     @id

    SupplierBill    SupplierBill[]
    SupplierProduct SupplierProduct[]
}

model SupplierBill {
    id               String             @id
    supplier         Supplier           @relation(fields: [supplierId], references: [accountId])
    supplierId       Int
    timestamp        BigInt
    SupplierBillItem SupplierBillItem[]
    verified         Boolean            @default(false)

    tx          Transaction @relation(fields: [txId], references: [id])
    txId        BigInt
    Warehouse   Warehouse?  @relation(fields: [warehouseId], references: [id])
    warehouseId Int?
}

model SupplierBillItem {
    id BigInt @id @default(autoincrement())

    supplierBill   SupplierBill @relation(fields: [supplierBillId], references: [id])
    supplierBillId String

    supplierProduct   SupplierProduct @relation(fields: [supplierProductId], references: [id])
    supplierProductId Int

    quantity BigInt
    price    BigInt
}

model SupplierProduct {
    id Int @id @default(autoincrement())

    supplier   Supplier @relation(fields: [supplierId], references: [accountId])
    supplierId Int
    code       String
    name       String

    matchedProduct   Product? @relation(fields: [matchedProductId], references: [id])
    matchedProductId Int?

    SupplierBillItem SupplierBillItem[]

    @@unique([supplierId, code])
}
